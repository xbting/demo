观察者模式
观察者（Observer）模式是对象的行为型模式，
又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、
源-收听者（Source/Listener）模式或从属者（Dependents）模式。

1、什么是观察者模式：
观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。
这样一个主题对象（被观察者）在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。

2.策略模式有什么好处？
将一个系统分割成一个一些类相互协作的类有一个不好的副作用，那就是需要维护相关对象间的一致性。
我们不希望为了维持一致性而使各类紧密耦合，这样会给维护、扩展和重用都带来不便。观察者就是解决这类的耦合关系的
<一句话，为了交互对象之间的松耦合设计而努>

3.模式涉及的角色：

抽象主题（Subject）：
被观察的对象（Observable）。可以用一个抽象类或者一个接口实现；在具体的情况下也可以使用具体类实现。
当需要被观察的状态发生变化时，需要通知队列中所有观察者对象。Subject需要维持（添加，删除，通知）一个观察者对象的队列列表。

具体主题（ConcreteSubject）：
被观察者的具体实现。包含一些基本的属性状态及其他操作。

抽象观察者（Observer）：
为所有的具体观察者定义一个接口或抽象类，在得到通知时更新自己；

具体观察者（ConcreteObserver）：
可以用一个抽象类或者一个接口实现；在具体的情况下也不排除使用具体类实现。

典型应用
- 侦听事件驱动程序设计中的外部事件
- 侦听/监视某个对象的状态变化
- 发布者/订阅者(publisher/subscriber)模型中，当一个外部事件（新的产品，消息的出现等等）被触发时，通知邮件列表中的订阅者